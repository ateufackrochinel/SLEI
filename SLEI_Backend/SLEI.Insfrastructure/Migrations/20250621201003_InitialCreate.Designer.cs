// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SLEI.Insfrastructure.Data;

#nullable disable

namespace SLEI.Insfrastructure.Migrations
{
    [DbContext(typeof(SLEIContext))]
    [Migration("20250621201003_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SLEI.Domain.Appartement", b =>
                {
                    b.Property<int>("AppartementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppartementId"));

                    b.Property<int>("LogementId")
                        .HasColumnType("int");

                    b.Property<float>("Loyer")
                        .HasColumnType("real");

                    b.Property<int>("NbreDePieces")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppartementId");

                    b.HasIndex("LogementId");

                    b.ToTable("Appartements");
                });

            modelBuilder.Entity("SLEI.Domain.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<int?>("AppartementId")
                        .HasColumnType("int");

                    b.Property<int?>("LogementId")
                        .HasColumnType("int");

                    b.Property<int?>("StudioId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("AppartementId");

                    b.HasIndex("LogementId");

                    b.HasIndex("StudioId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SLEI.Domain.Logement", b =>
                {
                    b.Property<int>("LogementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogementId"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbreAppartement")
                        .HasColumnType("int");

                    b.Property<int>("NbreStudio")
                        .HasColumnType("int");

                    b.Property<string>("NomLogement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogementId");

                    b.ToTable("Logements");
                });

            modelBuilder.Entity("SLEI.Domain.RDV", b =>
                {
                    b.Property<int>("RDVId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RDVId"));

                    b.Property<int?>("AppartementId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Heure")
                        .HasColumnType("time");

                    b.Property<string>("Motif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudioId")
                        .HasColumnType("int");

                    b.HasKey("RDVId");

                    b.HasIndex("AppartementId");

                    b.HasIndex("StudioId");

                    b.ToTable("RDVs");
                });

            modelBuilder.Entity("SLEI.Domain.Studio", b =>
                {
                    b.Property<int>("StudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudioId"));

                    b.Property<int>("LogementId")
                        .HasColumnType("int");

                    b.Property<float>("Loyer")
                        .HasColumnType("real");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudioId");

                    b.HasIndex("LogementId");

                    b.ToTable("Studios");
                });

            modelBuilder.Entity("SLEI.Domain.Appartement", b =>
                {
                    b.HasOne("SLEI.Domain.Logement", "logement")
                        .WithMany("Appartements")
                        .HasForeignKey("LogementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("logement");
                });

            modelBuilder.Entity("SLEI.Domain.Image", b =>
                {
                    b.HasOne("SLEI.Domain.Appartement", "appartement")
                        .WithMany("Images")
                        .HasForeignKey("AppartementId");

                    b.HasOne("SLEI.Domain.Logement", "logement")
                        .WithMany("Images")
                        .HasForeignKey("LogementId");

                    b.HasOne("SLEI.Domain.Studio", "studio")
                        .WithMany("Images")
                        .HasForeignKey("StudioId");

                    b.Navigation("appartement");

                    b.Navigation("logement");

                    b.Navigation("studio");
                });

            modelBuilder.Entity("SLEI.Domain.RDV", b =>
                {
                    b.HasOne("SLEI.Domain.Appartement", "appartement")
                        .WithMany("RDVs")
                        .HasForeignKey("AppartementId");

                    b.HasOne("SLEI.Domain.Studio", "studio")
                        .WithMany("RDVs")
                        .HasForeignKey("StudioId");

                    b.Navigation("appartement");

                    b.Navigation("studio");
                });

            modelBuilder.Entity("SLEI.Domain.Studio", b =>
                {
                    b.HasOne("SLEI.Domain.Logement", "logement")
                        .WithMany("Studios")
                        .HasForeignKey("LogementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("logement");
                });

            modelBuilder.Entity("SLEI.Domain.Appartement", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("RDVs");
                });

            modelBuilder.Entity("SLEI.Domain.Logement", b =>
                {
                    b.Navigation("Appartements");

                    b.Navigation("Images");

                    b.Navigation("Studios");
                });

            modelBuilder.Entity("SLEI.Domain.Studio", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("RDVs");
                });
#pragma warning restore 612, 618
        }
    }
}
